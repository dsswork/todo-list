{
    "openapi": "3.0.3",
    "info": {
        "title": "ToDo List",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Register by email and password",
                "description": "Register new user",
                "operationId": "register",
                "requestBody": {
                    "description": "Enter your email and password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "vova.vasilev@gmail.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Fields are valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "5|OFcX2ftJ1gcYBTty8pmXZBqBj0ic9PmSWEscosFE"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "example": [
                                                {
                                                    "phone": "The phone format is invalid."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Log in by email and password",
                "description": "Log in by email and password",
                "operationId": "login",
                "requestBody": {
                    "description": "Enter your password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "example": "vova.vasilev@gmail.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "5|OFcX2ftJ1gcYBTty8pmXZBqBj0ic9PmSWEscosFE"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "example": [
                                                {
                                                    "email": "User not found",
                                                    "password": "The password must be 6 characters."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Password or email wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "password is wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Password is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "5|OFcX2ftJ1gcYBTty8pmXZBqBj0ic9PmSWEscosFE"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "TASKS"
                ],
                "description": "",
                "operationId": "getTasks",
                "summary": "Get all user's tasks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Task status",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "priority[from]",
                        "in": "query",
                        "description": "Task priority",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0, 1, 2, 3, 4, 5
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "priority[to]",
                        "in": "query",
                        "description": "Task priority",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0, 1, 2, 3, 4, 5
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "sort[priority]",
                        "in": "query",
                        "description": "Sort by priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "sort[created_at]",
                        "in": "query",
                        "description": "Sort by creation time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "sort[completed_at]",
                        "in": "query",
                        "description": "Sort by completed time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": null
                    },
                    {
                        "name": "search[title]",
                        "in": "query",
                        "description": "Search by title",
                        "required": false,
                        "schema": {
                            "type": "string",
                        },
                        "example": null
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "All tasks"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TASKS"
                ],
                "description": "",
                "summary": "Create new task",
                "parameters": [
                ],
                "requestBody": {
                    "description": "Send name, phone and message",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "priority",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Book title",
                                        "type": "string",
                                        "example": "Send email"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ],
                                        "example": 3
                                    },
                                    "description": {
                                        "description": "Send email to all my friends",
                                        "type": "string",
                                        "example": "2002"
                                    },
                                    "task_id": {
                                        "description": "Parent task ID",
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Task has been created"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/tasks/{task}": {
            "get": {
                "tags": [
                    "TASKS"
                ],
                "summary": "Show/edit task",
                "description": "Get task data",
                "operationId": "showEditTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task id to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {

                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TASKS"
                ],
                "summary": "Update task",
                "description": "Update task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task id to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update task data",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Book title",
                                        "type": "string",
                                        "example": "Send email"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ],
                                        "example": 3
                                    },
                                    "description": {
                                        "description": "Send email to all my friends",
                                        "type": "string",
                                        "example": "2002"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {

                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TASKS"
                ],
                "summary": "Delete a task",
                "description": "Delete current task",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {

                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/tasks/{task}/complete": {
            "put": {
                "tags": [
                    "TASKS"
                ],
                "summary": "Complete task",
                "description": "Complete task",
                "operationId": "completeTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task id to complete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {

                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "Todo"
                    },
                    "priority": {
                        "type": "integer",
                        "example": 3
                    },
                    "title": {
                        "type": "string",
                        "example": "Amazing task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Make life happy"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "11.09.2023"
                    }
                }
            }
        },
        "responses": {
            "Unauthenticated": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthenticated."
                                }
                            }
                        }
                    }
                },
                "description": "Unauthenticated response"
            },
            "NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Task not found."
                                }
                            }
                        }
                    }
                },
                "description": "Not found response"
            }
        }
    }
}

